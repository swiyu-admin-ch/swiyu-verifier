application:
  external-url: "${EXTERNAL_URL:}"
  client_id: "${VERIFIER_DID:}"
  client_id_scheme: "did"
  signing_key: "${secret.signing_key:${SIGNING_KEY:}}"
  signing-key-verification-method: "${DID_VERIFICATION_METHOD:}"
  client-metadata-file: "${OPENID_CLIENT_METADATA_FILE:}"
  url-rewrite:
    mapping: "${URL_REWRITE_MAPPING:{}}"

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url: "${POSTGRES_JDBC:}"
    username: "${secret.db.username:${POSTGRES_USER:}}"
    password: "${secret.db.password:${POSTGRES_PASSWORD:}}"
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate # verifier-agent-management is owner of schema, so we just validate if it matches

management:
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, info

logging:
  level:
    ch.admin.bj.swiyu: INFO
    ch.admin.bj.swiyu.verifier.oid4vp.infrastructure.web.config.RequestLoggingFilter: DEBUG
