# SPDX-FileCopyrightText: 2025 Swiss Confederation
#
# SPDX-License-Identifier: MIT

name: Publish Docker Image
run-name: ${{ github.repository }} is building and publishing a docker image
on:
  release:
    types: [ published ]
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment_tag:
        description: 'Additional environment tag (dev, staging, rc, stable)'
        required: false
        type: choice
        options:
          - 'none'
          - 'dev'
          - 'staging'
          - 'rc'
          - 'stable'
        default: 'none'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# Github documentation
jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # https://docs.github.com/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build with Maven
        run: mvn --batch-mode clean generate-resources install

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Disable latest tag
          flavor: |
            latest=false
          # Additional tags (branch / release tag / commit SHA / environment tags)
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=dev,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=raw,value=${{ inputs.environment_tag }},enable=${{ github.event_name == 'workflow_dispatch' && inputs.environment_tag != 'none' }}
      - name: Build and push docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: SOURCE_IMAGE=eclipse-temurin:21-jre-ubi9-minimal
          file: Dockerfile