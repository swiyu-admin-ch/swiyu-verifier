<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ch.admin.bit.eid</groupId>
    <artifactId>verifier-oid4vp</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <name>verifier-oid4vp</name>
    <description>Generic verifier for public beta</description>
    <properties>
        <java.version>21</java.version>
        <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <sonar.exclusions>
            **/org/**/*.java, **/com/**/*.java
        </sonar.exclusions>
        <sonar.cpd.exclusions>
            **/*Dto.java,**/domain/*
        </sonar.cpd.exclusions>
        <sonar.coverage.exclusions>
            **/*Dto.java,**/config/*,**/generated/*,**/*Exception.java,**/*Constants.java,**/*Registry.java,**/*Config.java,**/*Mock*,**/*Application.java
        </sonar.coverage.exclusions>
        <!-- TODO should be removed with EID-1771: external jars bbscryptosuite and didresolver must be removed from classpaths -->
        <sonar.issue.ignore.multicriteria>e1</sonar.issue.ignore.multicriteria>
        <sonar.issue.ignore.multicriteria.e1.ruleKey>xml:S3422</sonar.issue.ignore.multicriteria.e1.ruleKey>
        <sonar.issue.ignore.multicriteria.e1.resourceKey>**/pom.xml</sonar.issue.ignore.multicriteria.e1.resourceKey>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.5.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.9.0</version>
        </dependency>

        <!-- Database start -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- Database end -->

        <!-- JWT Library -->
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>9.40</version>
        </dependency>

        <!-- BBS Library -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>1.9.23</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>5.14.0</version>
        </dependency>
        <dependency>
            <groupId>ch.admin.eid</groupId>
            <artifactId>bbscryptosuite</artifactId>
            <version>0.0.1</version>
            <!--
                Attention (scope system):

                We provide this external lib via resource folder. This is an anti pattern, but any other
                possibility to install multiple (!) jars to local repo do not work. E.g.

                - Approach 1: mvn install:install-file
                  -> https://stackoverflow.com/questions/31508421/maven-install-lifecycle-does-not-execute-validate
                  -> reason: during validate phase one can not install dependencies since maven3. Solution would be to
                             run "mvn validate" before running "mvn install" but this won't work in BIT internal
                             Pipeline
                - Approach 2: local repo within pom.xml
                    -> https://stackoverflow.com/a/28762617
                    -> reason: doesn't work in BIT context with corporate maven settings. install always
                       fails since corporate remote repository is first in order

                ! TODO EID-1771: This is needs to be fixed by providing those libs via repository. !
            -->
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/bbscryptosuite-0.0.1.jar</systemPath>
        </dependency>
        <!-- End BBS -->

        <dependency>
            <groupId>ch.admin.eid</groupId>
            <artifactId>didresolver</artifactId>
            <version>0.0.2</version>
            <!--
                Attention (scope system):

                We provide this external lib via resource folder. This is an anti pattern, but any other
                possibility to install multiple (!) jars to local repo do not work. E.g.

                - Approach 1: mvn install:install-file
                  -> https://stackoverflow.com/questions/31508421/maven-install-lifecycle-does-not-execute-validate
                  -> reason: during validate phase one can not install dependencies since maven3. Solution would be to
                             run "mvn validate" before running "mvn install" but this won't work in BIT internal
                             Pipeline
                - Approach 2: local repo within pom.xml
                    -> https://stackoverflow.com/a/28762617
                    -> reason: doesn't work in BIT context with corporate maven settings. install always
                       fails since corporate remote repository is first in order

                ! TODO EID-1771: This is needs to be fixed by providing those libs via repository. !
            -->
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/didresolver-0.0.2.jar</systemPath>
        </dependency>

        <!-- SD-JWT -->
        <!-- https://mvnrepository.com/artifact/com.authlete/sd-jwt -->
        <dependency>
            <groupId>com.authlete</groupId>
            <artifactId>sd-jwt</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.12.6</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.12.6</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.12.6</version>
            <scope>runtime</scope>
        </dependency>
        <!-- End SD-JWT -->

        <!-- Cloud Kubernetes config -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes-fabric8-config</artifactId>
            <version>3.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <version>4.1.4</version>
        </dependency>
        <!-- End Cloud Kubernetes config -->

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>7.4</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.6</version>
        </dependency>
        <!-- End Logging -->

        <!-- Testing Tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>1.78.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>1.78.1</version>
            <scope>test</scope>
        </dependency>

        <!-- check again if this is needed when spring-boot > 3.3.3 -->
        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-core</artifactId>
            <version>2.10.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- End Testing Tools -->

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- TODO EID-1771 remove once we have included system scoped jars properly -->
                    <includeSystemScope>true</includeSystemScope>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <dependencyManagement>
        <dependencies>
            <!-- CVE-Overrides here -->
            <!-- CVE-2024-38816: remove once Spring boot releases a fixed version -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>6.1.13</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
